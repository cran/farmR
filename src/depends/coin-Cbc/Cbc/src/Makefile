# Makefile.in generated by automake 1.9.6 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# Copyright (C) 2006, 2007 International Business Machines and others.
# All Rights Reserved.
# This file is distributed under the Common Public License.

# Author:  Andreas Waechter           IBM    2006-04-13



srcdir = .
top_srcdir = ..

pkgdatadir = $(datadir)/cbc
pkglibdir = $(libdir)/cbc
pkgincludedir = $(includedir)/cbc
top_builddir = ..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i386-apple-darwin10.0.0
host_triplet = i386-apple-darwin10.0.0
bin_PROGRAMS = $(am__EXEEXT_1) $(am__EXEEXT_2)

########################################################################
#                            cbc program                               #
########################################################################

# Name of the executable compiled in this directory.  We want it to be
# installed in the 'bin' directory
am__append_1 = cbc

# Add locations of include files.
am__append_2 = -I`$(CYGPATH_W) $(CLPSRCDIR)/src` \
	-I`$(CYGPATH_W) $(OSISRCDIR)/src/OsiClp` \
	-I`$(CYGPATH_W) $(CLPOBJDIR)/inc`

am__append_3 = `cat $(CLPOBJDIR)/clp_addlibs.txt`

# If we have the Ampl solver library, we need to add additional things
#cbc_SOURCES += Cbc_ampl.cpp Cbc_ampl.h
#am__append_4 = $(ASLLIB)
#am__append_5 = $(ASL_CPPFLAGS) -DCOIN_HAS_ASL

########################################################################
#                        cbc-generic program                           #
########################################################################

# Name of the executable compiled in this directory.  We want it to be
# installed in the 'bin' directory
#am__append_6 = cbc-generic

# List all additionally required solver and Osi libraries
#am__append_7 = -I`$(CYGPATH_W) $(CLPSRCDIR)/src` \
#	-I`$(CYGPATH_W) $(OSISRCDIR)/src/OsiClp` \
#	-I`$(CYGPATH_W) $(CLPOBJDIR)/inc`

#am__append_8 = $(OSIOBJDIR)/src/OsiClp/libOsiClp.la \
#	$(CLPOBJDIR)/src/libClp.la

#am__append_9 = `cat $(CLPOBJDIR)/clp_addlibs.txt`
##am__append_10 = -I`$(CYGPATH_W) $(CPXINCDIR)` \
##	-I`$(CYGPATH_W) $(OSISRCDIR)/src/OsiCpx`

##am__append_11 = $(OSIOBJDIR)/src/OsiCpx/libOsiCpx.la
##am__append_12 = -I`$(CYGPATH_W) $(DYLPSRCDIR)/src/DylpStdLib` \
##        -I`$(CYGPATH_W) $(DYLPSRCDIR)/src/Dylp` \
##        -I`$(CYGPATH_W) $(DYLPOBJDIR)/inc` \
##	-I`$(CYGPATH_W) $(OSISRCDIR)/src/OsiDylp`

##am__append_13 = $(OSIOBJDIR)/src/OsiDylp/libOsiDylp.la \
##	$(DYLPOBJDIR)/src/Dylp/libDylp.la

##am__append_14 = `cat $(DYLPOBJDIR)/dylp_addlibs.txt`
##am__append_15 = -I`$(CYGPATH_W) $(OSISRCDIR)/src/OsiFmp`
##am__append_16 = $(OSIOBJDIR)/src/OsiFmp/libOsiFmp.la
##am__append_17 = -I`$(CYGPATH_W) $(GLPKINCDIR)` \
##	-I`$(CYGPATH_W) $(OSISRCDIR)/src/OsiGlpk`

##am__append_18 = $(OSIOBJDIR)/src/OsiGlpk/libOsiGlpk.la
##am__append_19 = -I`$(CYGPATH_W) $(MSKINCDIR)` \
##	-I`$(CYGPATH_W) $(OSISRCDIR)/src/OsiMsk`

##am__append_20 = $(OSIOBJDIR)/src/OsiMsk/libOsiMsk.la
##am__append_21 = -I`$(CYGPATH_W) $(OSLINCDIR)` \
##	-I`$(CYGPATH_W) $(OSISRCDIR)/src/OsiOsl`

##am__append_22 = $(OSIOBJDIR)/src/OsiOsl/libOsiOsl.la
##am__append_23 = -I`$(CYGPATH_W) $(SPXINCDIR)` \
##	-I`$(CYGPATH_W) $(OSISRCDIR)/src/OsiSpx`

##am__append_24 = $(OSIOBJDIR)/src/OsiSpx/libOsiSpx.la
##am__append_25 = -I`$(CYGPATH_W) $(SYMPHONYSRCDIR)/src` \
##	-I`$(CYGPATH_W) $(OSISRCDIR)/src/OsiSym`

##am__append_26 = $(OSIOBJDIR)/src/OsiSym/libOsiSym.la \
##	$(SYMPHONYOBJDIR)/src/libSym.la

##am__append_27 = `cat $(SYMPHONYOBJDIR)/sym_addlibs.txt`
#am__append_28 = -I`$(CYGPATH_W) $(VOLSRCDIR)/src` \
#	-I`$(CYGPATH_W) $(OSISRCDIR)/src/OsiVol`

#am__append_29 = $(OSIOBJDIR)/src/OsiVol/libOsiVol.la \
#	$(VOLOBJDIR)/src/libVol.la

#am__append_30 = `cat $(VOLOBJDIR)/vol_addlibs.txt`
##am__append_31 = -I`$(CYGPATH_W) $(XPRINCDIR)` \
##	-I`$(CYGPATH_W) $(OSISRCDIR)/src/OsiXpr`

##am__append_32 = $(OSIOBJDIR)/src/OsiXpr/libOsiXpr.la
##am__append_33 = $(ASLLIB)
##am__append_34 = $(ASL_CPPFLAGS) -DCOIN_HAS_ASL
subdir = src
DIST_COMMON = $(includecoin_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/inc/config_cbc.h
CONFIG_CLEAN_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" \
	"$(DESTDIR)$(includecoindir)"
libLTLIBRARIES_INSTALL = $(INSTALL)
LTLIBRARIES = $(lib_LTLIBRARIES)
libCbc_la_LIBADD =
am_libCbc_la_OBJECTS = Cbc_C_Interface.lo CbcBranchActual.lo \
	CbcBranchBase.lo CbcBranchCut.lo CbcBranchDynamic.lo \
	CbcBranchLotsize.lo CbcCompareActual.lo CbcCountRowCut.lo \
	CbcCutGenerator.lo CbcEventHandler.lo CbcFathom.lo \
	CbcFathomDynamicProgramming.lo CbcHeuristic.lo \
	CbcHeuristicFPump.lo CbcHeuristicGreedy.lo \
	CbcHeuristicLocal.lo CbcHeuristicRINS.lo CbcMessage.lo \
	CbcModel.lo CbcNode.lo CbcStatistics.lo CbcStrategy.lo \
	CbcTree.lo CbcTreeLocal.lo
libCbc_la_OBJECTS = $(am_libCbc_la_OBJECTS)
libCbcSolver_la_LIBADD =
am_libCbcSolver_la_OBJECTS = CbcCbcParam.lo Cbc_ampl.lo \
	ClpAmplStuff.lo CbcLinked.lo unitTestClp.lo CbcSolver.lo
libCbcSolver_la_OBJECTS = $(am_libCbcSolver_la_OBJECTS)
am__EXEEXT_1 = cbc$(EXEEXT)
#am__EXEEXT_2 = cbc-generic$(EXEEXT)
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(bin_PROGRAMS)
am__cbc_SOURCES_DIST = CoinSolve.cpp
am_cbc_OBJECTS = CoinSolve.$(OBJEXT)
cbc_OBJECTS = $(am_cbc_OBJECTS)
am__DEPENDENCIES_1 =
#am__DEPENDENCIES_2 =  \
#	$(am__DEPENDENCIES_1)
cbc_DEPENDENCIES = libCbcSolver.la libCbc.la \
	$(CGLOBJDIR)/src/libCgl.la \
	$(OSIOBJDIR)/src/OsiClp/libOsiClp.la \
	$(OSIOBJDIR)/src/libOsi.la \
	$(CLPOBJDIR)/src/libClp.la \
	$(COINUTILSOBJDIR)/src/libCoinUtils.la \
	$(am__DEPENDENCIES_2)
am__cbc_generic_SOURCES_DIST = CbcGenBaB.cpp CbcGenCbcParam.cpp \
	CbcGenCbcParam.hpp CbcGenCbcParamUtils.cpp CbcGenCtlBlk.cpp \
	CbcGenCtlBlk.hpp CbcGeneric.cpp CbcGenMessages.cpp \
	CbcGenMessages.hpp CbcGenOsiParam.cpp CbcGenOsiParam.hpp \
	CbcGenOsiParamUtils.cpp CbcGenParam.cpp CbcGenParam.hpp \
	CbcGenParamUtils.cpp CbcGenSolution.cpp CbcGenSolvers.cpp
#am_cbc_generic_OBJECTS =  \
#	CbcGenBaB.$(OBJEXT) \
#	CbcGenCbcParam.$(OBJEXT) \
#	CbcGenCbcParamUtils.$(OBJEXT) \
#	CbcGenCtlBlk.$(OBJEXT) \
#	CbcGeneric.$(OBJEXT) \
#	CbcGenMessages.$(OBJEXT) \
#	CbcGenOsiParam.$(OBJEXT) \
#	CbcGenOsiParamUtils.$(OBJEXT) \
#	CbcGenParam.$(OBJEXT) \
#	CbcGenParamUtils.$(OBJEXT) \
#	CbcGenSolution.$(OBJEXT) \
#	CbcGenSolvers.$(OBJEXT)
cbc_generic_OBJECTS = $(am_cbc_generic_OBJECTS)
#am__DEPENDENCIES_3 = $(OSIOBJDIR)/src/OsiClp/libOsiClp.la \
#	$(CLPOBJDIR)/src/libClp.la
##am__DEPENDENCIES_4 = $(OSIOBJDIR)/src/OsiCpx/libOsiCpx.la
##am__DEPENDENCIES_5 = $(OSIOBJDIR)/src/OsiDylp/libOsiDylp.la \
##	$(DYLPOBJDIR)/src/Dylp/libDylp.la
##am__DEPENDENCIES_6 = $(OSIOBJDIR)/src/OsiFmp/libOsiFmp.la
##am__DEPENDENCIES_7 = $(OSIOBJDIR)/src/OsiGlpk/libOsiGlpk.la
##am__DEPENDENCIES_8 = $(OSIOBJDIR)/src/OsiMsk/libOsiMsk.la
##am__DEPENDENCIES_9 = $(OSIOBJDIR)/src/OsiOsl/libOsiOsl.la
##am__DEPENDENCIES_10 = $(OSIOBJDIR)/src/OsiSpx/libOsiSpx.la
##am__DEPENDENCIES_11 = $(OSIOBJDIR)/src/OsiSym/libOsiSym.la \
##	$(SYMPHONYOBJDIR)/src/libSym.la
#am__DEPENDENCIES_12 = $(OSIOBJDIR)/src/OsiVol/libOsiVol.la \
#	$(VOLOBJDIR)/src/libVol.la
##am__DEPENDENCIES_13 = $(OSIOBJDIR)/src/OsiXpr/libOsiXpr.la
##am__DEPENDENCIES_14 = $(am__DEPENDENCIES_1)
#cbc_generic_DEPENDENCIES =  \
#	libCbcSolver.la libCbc.la \
#	$(CGLOBJDIR)/src/libCgl.la \
#	$(am__DEPENDENCIES_3) \
#	$(am__DEPENDENCIES_4) \
#	$(am__DEPENDENCIES_5) \
#	$(am__DEPENDENCIES_6) \
#	$(am__DEPENDENCIES_7) \
#	$(am__DEPENDENCIES_8) \
#	$(am__DEPENDENCIES_9) \
#	$(am__DEPENDENCIES_10) \
#	$(am__DEPENDENCIES_11) \
#	$(am__DEPENDENCIES_12) \
#	$(am__DEPENDENCIES_13) \
#	$(am__DEPENDENCIES_14) \
#	$(OSIOBJDIR)/src/libOsi.la \
#	$(COINUTILSOBJDIR)/src/libCoinUtils.la
depcomp = $(SHELL) $(top_srcdir)/../depcomp
am__depfiles_maybe = depfiles
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(libCbc_la_SOURCES) $(libCbcSolver_la_SOURCES) \
	$(cbc_SOURCES) $(cbc_generic_SOURCES)
DIST_SOURCES = $(libCbc_la_SOURCES) $(libCbcSolver_la_SOURCES) \
	$(am__cbc_SOURCES_DIST) $(am__cbc_generic_SOURCES_DIST)
includecoinHEADERS_INSTALL = $(INSTALL_HEADER)
HEADERS = $(includecoin_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /Users/iracooke/Sources/javawfm_CRAN/farmR/src/depends/coin-Cbc/missing --run aclocal-1.9
ADDLIBS = -lm 
ADD_CFLAGS = -arch i386 
ADD_CXXFLAGS = -arch i386
ALWAYS_FALSE_FALSE = 
ALWAYS_FALSE_TRUE = #
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = ${SHELL} /Users/iracooke/Sources/javawfm_CRAN/farmR/src/depends/coin-Cbc/missing --run tar
AR = ar
ASLLIB = 
ASL_CPPFLAGS = 
AUTOCONF = ${SHELL} /Users/iracooke/Sources/javawfm_CRAN/farmR/src/depends/coin-Cbc/missing --run autoconf
AUTOHEADER = ${SHELL} /Users/iracooke/Sources/javawfm_CRAN/farmR/src/depends/coin-Cbc/missing --run autoheader
AUTOMAKE = ${SHELL} /Users/iracooke/Sources/javawfm_CRAN/farmR/src/depends/coin-Cbc/missing --run automake-1.9
AUX_DIR = 
AWK = awk
BUILDTOOLSDIR = 
CBCDOCDIR = /Users/iracooke/Sources/javawfm_CRAN/farmR/src/depends/coin-Cbc/lib/../share/doc/coin/Cbc
CBCOBJDIR = /Users/iracooke/Sources/javawfm_CRAN/farmR/src/depends/coin-Cbc/Cbc/.
CBCSRCDIR = /Users/iracooke/Sources/javawfm_CRAN/farmR/src/depends/coin-Cbc/Cbc
CBC_BUILD_CBC_GENERIC_FALSE = 
CBC_BUILD_CBC_GENERIC_TRUE = #
CC = cc
CCDEPMODE = depmode=gcc3
CDEFS = 
CFLAGS = -O3 -fomit-frame-pointer -pipe -DNDEBUG -pedantic-errors -Wimplicit -Wparentheses -Wsequence-point -Wreturn-type -Wcast-qual -Wall -arch i386  
CGLDOCDIR = /Users/iracooke/Sources/javawfm_CRAN/farmR/src/depends/coin-Cbc/lib/../share/doc/coin/Cgl
CGLOBJDIR = /Users/iracooke/Sources/javawfm_CRAN/farmR/src/depends/coin-Cbc/Cbc/../Cgl
CGLSRCDIR = /Users/iracooke/Sources/javawfm_CRAN/farmR/src/depends/coin-Cbc/Cgl
CLPDOCDIR = /Users/iracooke/Sources/javawfm_CRAN/farmR/src/depends/coin-Cbc/lib/../share/doc/coin/Clp
CLPOBJDIR = /Users/iracooke/Sources/javawfm_CRAN/farmR/src/depends/coin-Cbc/Cbc/../Clp
CLPSRCDIR = /Users/iracooke/Sources/javawfm_CRAN/farmR/src/depends/coin-Cbc/Clp
COINUTILSDOCDIR = /Users/iracooke/Sources/javawfm_CRAN/farmR/src/depends/coin-Cbc/lib/../share/doc/coin/CoinUtils
COINUTILSOBJDIR = /Users/iracooke/Sources/javawfm_CRAN/farmR/src/depends/coin-Cbc/Cbc/../CoinUtils
COINUTILSSRCDIR = /Users/iracooke/Sources/javawfm_CRAN/farmR/src/depends/coin-Cbc/CoinUtils
COIN_BUILD_GLPK_FALSE = 
COIN_BUILD_GLPK_TRUE = #
COIN_HAS_ASL_FALSE = 
COIN_HAS_ASL_TRUE = #
COIN_HAS_CBC_FALSE = #
COIN_HAS_CBC_TRUE = 
COIN_HAS_CGL_FALSE = #
COIN_HAS_CGL_TRUE = 
COIN_HAS_CLP_FALSE = #
COIN_HAS_CLP_TRUE = 
COIN_HAS_COINUTILS_FALSE = #
COIN_HAS_COINUTILS_TRUE = 
COIN_HAS_CPX_FALSE = 
COIN_HAS_CPX_TRUE = #
COIN_HAS_DYLP_FALSE = 
COIN_HAS_DYLP_TRUE = #
COIN_HAS_FMP_FALSE = 
COIN_HAS_FMP_TRUE = #
COIN_HAS_GLPK_FALSE = 
COIN_HAS_GLPK_TRUE = #
COIN_HAS_MSK_FALSE = 
COIN_HAS_MSK_TRUE = #
COIN_HAS_OSI_FALSE = #
COIN_HAS_OSI_TRUE = 
COIN_HAS_OSL_FALSE = 
COIN_HAS_OSL_TRUE = #
COIN_HAS_SPX_FALSE = 
COIN_HAS_SPX_TRUE = #
COIN_HAS_SYMPHONY_FALSE = 
COIN_HAS_SYMPHONY_TRUE = #
COIN_HAS_VOL_FALSE = #
COIN_HAS_VOL_TRUE = 
COIN_HAS_XPR_FALSE = 
COIN_HAS_XPR_TRUE = #
CPP = cc -E
CPPFLAGS = 
CPXINCDIR = 
CPXLIB = 
CXX = g++
CXXCPP = g++ -E
CXXDEFS = 
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -O3 -fomit-frame-pointer -pipe -DNDEBUG -pedantic-errors -Wimplicit -Wparentheses -Wreturn-type -Wcast-qual -Wall -Wpointer-arith -Wwrite-strings -Wconversion -arch i386 
CYGPATH_W = echo
DBG_CFLAGS = -g -pipe -pedantic-errors -Wimplicit -Wparentheses -Wsequence-point -Wreturn-type -Wcast-qual -Wall -arch i386  
DBG_CXXFLAGS = -g -pipe -pedantic-errors -Wimplicit -Wparentheses -Wreturn-type -Wcast-qual -Wall -Wpointer-arith -Wwrite-strings -Wconversion -arch i386 
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DYLPDOCDIR = 
DYLPOBJDIR = 
DYLPSRCDIR = 
ECHO = echo
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = grep -E
EXEEXT = 
F77 = 
FADDLIBS = -lm 
FFLAGS = 
FMPINCDIR = 
FMPLIB = 
GLPKINCDIR = 
GLPKLIB = 
HAVE_EXTERNALS_FALSE = 
HAVE_EXTERNALS_TRUE = #
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
LDFLAGS = 
LIBEXT = a
LIBOBJS = 
LIBS =  `cat $(CGLOBJDIR)/cgl_addlibs.txt` `cat \
	$(OSIOBJDIR)/osi_addlibs.txt` `cat \
	$(COINUTILSOBJDIR)/coinutils_addlibs.txt` $(ADDLIBS) \
	$(am__append_3) $(am__append_9) $(am__append_14) \
	$(am__append_27) $(am__append_30)
LIBTOOL = $(SHELL) $(top_builddir)/../libtool
LIBTOOLM4 = 
LN_S = ln -s
LTLIBOBJS = 
LT_LDFLAGS = 
MAINT = #
MAINTAINER_MODE_FALSE = 
MAINTAINER_MODE_TRUE = #
MAKEINFO = ${SHELL} /Users/iracooke/Sources/javawfm_CRAN/farmR/src/depends/coin-Cbc/missing --run makeinfo
MPICC = 
MPICXX = 
MSKINCDIR = 
MSKLIB = 
OBJEXT = o
OPT_CFLAGS = -O3 -fomit-frame-pointer -pipe -DNDEBUG -pedantic-errors -Wimplicit -Wparentheses -Wsequence-point -Wreturn-type -Wcast-qual -Wall -arch i386  
OPT_CXXFLAGS = -O3 -fomit-frame-pointer -pipe -DNDEBUG -pedantic-errors -Wimplicit -Wparentheses -Wreturn-type -Wcast-qual -Wall -Wpointer-arith -Wwrite-strings -Wconversion -arch i386 
OSIDOCDIR = /Users/iracooke/Sources/javawfm_CRAN/farmR/src/depends/coin-Cbc/lib/../share/doc/coin/Osi
OSIOBJDIR = /Users/iracooke/Sources/javawfm_CRAN/farmR/src/depends/coin-Cbc/Cbc/../Osi
OSISRCDIR = /Users/iracooke/Sources/javawfm_CRAN/farmR/src/depends/coin-Cbc/Osi
OSLINCDIR = 
OSLLIB = 
PACKAGE = cbc
PACKAGE_BUGREPORT = coin-cbc@list.coin-or.org
PACKAGE_NAME = Cbc
PACKAGE_STRING = Cbc 2.0stable
PACKAGE_TARNAME = cbc
PACKAGE_VERSION = 2.0stable
PATH_SEPARATOR = :
RANLIB = ranlib
RPATH_FLAGS = 
SET_MAKE = 
SHELL = /bin/sh
SPXINCDIR = 
SPXLIB = 
STRIP = strip
SYMPHONYDOCDIR = 
SYMPHONYOBJDIR = 
SYMPHONYSRCDIR = 
VERSION = 2.0stable
VOLDOCDIR = /Users/iracooke/Sources/javawfm_CRAN/farmR/src/depends/coin-Cbc/lib/../share/doc/coin/Vol
VOLOBJDIR = /Users/iracooke/Sources/javawfm_CRAN/farmR/src/depends/coin-Cbc/Cbc/../Vol
VOLSRCDIR = /Users/iracooke/Sources/javawfm_CRAN/farmR/src/depends/coin-Cbc/Vol
VPATH_DISTCLEANFILES = 
XPRINCDIR = 
XPRLIB = 
abs_bin_dir = /Users/iracooke/Sources/javawfm_CRAN/farmR/src/depends/coin-Cbc/bin
abs_include_dir = /Users/iracooke/Sources/javawfm_CRAN/farmR/src/depends/coin-Cbc/include
abs_lib_dir = /Users/iracooke/Sources/javawfm_CRAN/farmR/src/depends/coin-Cbc/lib
abs_source_dir = /Users/iracooke/Sources/javawfm_CRAN/farmR/src/depends/coin-Cbc/Cbc
ac_c_preproc_warn_flag = 
ac_ct_AR = ar
ac_ct_CC = cc
ac_ct_CXX = g++
ac_ct_F77 = 
ac_ct_RANLIB = ranlib
ac_ct_STRIP = strip
ac_cxx_preproc_warn_flag = 
am__fastdepCC_FALSE = #
am__fastdepCC_TRUE = 
am__fastdepCXX_FALSE = #
am__fastdepCXX_TRUE = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = i386-apple-darwin10.0.0
build_alias = 
build_cpu = i386
build_os = darwin10.0.0
build_vendor = apple
datadir = ${prefix}/share
exec_prefix = ${prefix}
have_autoconf = 
have_automake = 
have_svn = 
host = i386-apple-darwin10.0.0
host_alias = 
host_cpu = i386
host_os = darwin10.0.0
host_vendor = apple
includedir = ${prefix}/include
infodir = ${prefix}/info
install_sh = /Users/iracooke/Sources/javawfm_CRAN/farmR/src/depends/coin-Cbc/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localstatedir = ${prefix}/var
mandir = ${prefix}/man
mkdir_p = $(install_sh) -d
oldincludedir = /usr/include
prefix = /Users/iracooke/Sources/javawfm_CRAN/farmR/src/depends/coin-Cbc
program_transform_name = s,x,x,
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
sol_cc_compiler = 
sysconfdir = ${prefix}/etc
target_alias = 
AUTOMAKE_OPTIONS = foreign

########################################################################
#                               libCbc                                 #
########################################################################

# Name of the library compiled in this directory.  We want it to be installed
# in the 'lib' directory
lib_LTLIBRARIES = libCbc.la libCbcSolver.la

# List all source files for this library, including headers
libCbc_la_SOURCES = \
	Cbc_C_Interface.cpp Cbc_C_Interface.h \
	CbcConfig.h \
	CbcBranchActual.cpp CbcBranchActual.hpp \
	CbcBranchBase.cpp CbcBranchBase.hpp \
	CbcBranchCut.cpp CbcBranchCut.hpp \
	CbcBranchDynamic.cpp CbcBranchDynamic.hpp \
	CbcBranchLotsize.cpp CbcBranchLotsize.hpp \
	CbcCompareActual.cpp CbcCompareActual.hpp \
	CbcCompareBase.hpp \
	CbcCountRowCut.cpp CbcCountRowCut.hpp \
	CbcCutGenerator.cpp CbcCutGenerator.hpp \
	CbcEventHandler.cpp CbcEventHandler.hpp \
	CbcFathom.cpp CbcFathom.hpp \
	CbcFathomDynamicProgramming.cpp CbcFathomDynamicProgramming.hpp \
	CbcFeasibilityBase.hpp \
	CbcHeuristic.cpp CbcHeuristic.hpp \
	CbcHeuristicFPump.cpp CbcHeuristicFPump.hpp \
	CbcHeuristicGreedy.cpp CbcHeuristicGreedy.hpp \
	CbcHeuristicLocal.cpp CbcHeuristicLocal.hpp \
	CbcHeuristicRINS.cpp CbcHeuristicRINS.hpp \
	CbcMessage.cpp CbcMessage.hpp \
	CbcModel.cpp CbcModel.hpp \
	CbcNode.cpp CbcNode.hpp \
	CbcStatistics.cpp CbcStatistics.hpp \
	CbcStrategy.cpp CbcStrategy.hpp \
	CbcTree.cpp CbcTree.hpp \
	CbcTreeLocal.cpp CbcTreeLocal.hpp

libCbcSolver_la_SOURCES = \
	CbcCbcParam.cpp \
	Cbc_ampl.cpp Cbc_ampl.h \
	ClpConstraintAmpl.hpp ClpAmplObjective.hpp ClpAmplStuff.cpp \
	CbcLinked.cpp CbcLinked.hpp \
	unitTestClp.cpp CbcSolver.cpp 


#Stefan: added unitTestClp.cpp because CbcSolver defines reference to it

# This is for libtool (on Windows)
libCbc_la_LDFLAGS = $(LT_LDFLAGS)
libCbcSolver_la_LDFLAGS = $(LT_LDFLAGS)

########################################################################
#                            Additional flags                          #
########################################################################

# Here list all include flags, relative to this "srcdir" directory.  This
# "cygpath" stuff is necessary to compile with native compilers on Windows.
# "top_srcdir" refers to the basic directory for the main package that is
# being compiled.

# List additional defines
AM_CPPFLAGS = $(am__append_2) $(am__append_5) $(am__append_7) \
	$(am__append_10) $(am__append_12) $(am__append_15) \
	$(am__append_17) $(am__append_19) $(am__append_21) \
	$(am__append_23) $(am__append_25) $(am__append_28) \
	$(am__append_31) $(am__append_34) -I`$(CYGPATH_W) \
	$(CGLSRCDIR)/src` -I`$(CYGPATH_W) $(CGLSRCDIR)/src/CglClique` \
	-I`$(CYGPATH_W) $(CGLSRCDIR)/src/CglDuplicateRow` \
	-I`$(CYGPATH_W) $(CGLSRCDIR)/src/CglFlowCover` -I`$(CYGPATH_W) \
	$(CGLSRCDIR)/src/CglGomory` -I`$(CYGPATH_W) \
	$(CGLSRCDIR)/src/CglKnapsackCover` -I`$(CYGPATH_W) \
	$(CGLSRCDIR)/src/CglMixedIntegerRounding` -I`$(CYGPATH_W) \
	$(CGLSRCDIR)/src/CglMixedIntegerRounding2` -I`$(CYGPATH_W) \
	$(CGLSRCDIR)/src/CglOddHole` -I`$(CYGPATH_W) \
	$(CGLSRCDIR)/src/CglPreProcess` -I`$(CYGPATH_W) \
	$(CGLSRCDIR)/src/CglProbing` -I`$(CYGPATH_W) \
	$(CGLSRCDIR)/src/CglRedSplit` -I`$(CYGPATH_W) \
	$(CGLSRCDIR)/src/CglTwomir` -I`$(CYGPATH_W) \
	$(CGLSRCDIR)/src/CglLandP` -I`$(CYGPATH_W) \
	$(CGLSRCDIR)/src/CglResidualCapacity` -I`$(CYGPATH_W) \
	$(COINUTILSSRCDIR)/src` -I`$(CYGPATH_W) \
	$(COINUTILSOBJDIR)/inc` -I`$(CYGPATH_W) $(OSISRCDIR)/src` \
	-I`$(CYGPATH_W) $(OSIOBJDIR)/inc` -DCOIN_NO_CLP_MESSAGE \
	-DUSE_CBCCONFIG

# List all source files for this executable, including headers
cbc_SOURCES = \
	CoinSolve.cpp


# Additional COIN libraries
cbc_LDADD = libCbcSolver.la libCbc.la \
	$(CGLOBJDIR)/src/libCgl.la \
	$(OSIOBJDIR)/src/OsiClp/libOsiClp.la \
	$(OSIOBJDIR)/src/libOsi.la \
	$(CLPOBJDIR)/src/libClp.la \
	$(COINUTILSOBJDIR)/src/libCoinUtils.la \
	$(am__append_4)

# Finally, the -rpath flag is used by libtool to make sure that the shared
# library is found (in the lib install directory) when we are using dynamic
# libraries.
cbc_LDFLAGS = -rpath $(libdir)

# List all source files for this executable, including headers
#cbc_generic_SOURCES = \
#	CbcGenBaB.cpp \
#	CbcGenCbcParam.cpp CbcGenCbcParam.hpp CbcGenCbcParamUtils.cpp \
#	CbcGenCtlBlk.cpp CbcGenCtlBlk.hpp \
#	CbcGeneric.cpp \
#	CbcGenMessages.cpp CbcGenMessages.hpp \
#	CbcGenOsiParam.cpp CbcGenOsiParam.hpp CbcGenOsiParamUtils.cpp \
#	CbcGenParam.cpp CbcGenParam.hpp CbcGenParamUtils.cpp \
#	CbcGenSolution.cpp \
#	CbcGenSolvers.cpp


# Finally the Osi Coin library (many of the above need it)
#cbc_generic_LDADD = libCbcSolver.la \
#	libCbc.la \
#	$(CGLOBJDIR)/src/libCgl.la \
#	$(am__append_8) $(am__append_11) \
#	$(am__append_13) $(am__append_16) \
#	$(am__append_18) $(am__append_20) \
#	$(am__append_22) $(am__append_24) \
#	$(am__append_26) $(am__append_29) \
#	$(am__append_32) $(am__append_33) \
#	$(OSIOBJDIR)/src/libOsi.la \
#	$(COINUTILSOBJDIR)/src/libCoinUtils.la

# Finally, the -rpath flag is used by libtool to make sure that the shared
# library is found (in the lib install directory) when we are using dynamic
# libraries.
#cbc_generic_LDFLAGS = -rpath $(libdir)

# This line is necessary to allow VPATH compilation with MS compilers
# on Cygwin
DEFAULT_INCLUDES = -I. -I`$(CYGPATH_W) $(srcdir)` -I$(top_builddir)/inc

########################################################################
#                Headers that need to be installed                     #
########################################################################

# Here list all the header files that are required by a user of the library,
# and that therefore should be installed in 'install/coin'
includecoindir = $(includedir)/coin
includecoin_HEADERS = \
	../inc/config_cbc.h \
	Cbc_C_Interface.h \
	CbcBranchActual.hpp \
	CbcBranchBase.hpp \
	CbcBranchDynamic.hpp \
	CbcBranchLotsize.hpp \
	CbcBranchCut.hpp \
	CbcCompareActual.hpp \
	CbcCompareBase.hpp \
	CbcCutGenerator.hpp \
	CbcFathom.hpp \
	CbcEventHandler.hpp \
	CbcFeasibilityBase.hpp \
	CbcHeuristic.hpp \
	CbcHeuristicFPump.hpp \
	CbcHeuristicGreedy.hpp \
	CbcHeuristicLocal.hpp \
	CbcHeuristicRINS.hpp \
	CbcMessage.hpp \
	CbcModel.hpp \
	CbcNode.hpp \
	CbcStrategy.hpp \
	CbcSolver.hpp \
	CbcTree.hpp \
	CbcLinked.hpp \
	CbcTreeLocal.hpp \
	ClpConstraintAmpl.hpp \
	ClpAmplObjective.hpp 


#############################################################################
# Create the Config.h file that always defines HAVE_CONFIG_H and install it #
#############################################################################

# You only need to adapt the following line
ConfigHeader = CbcConfig.h
all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in: # $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  src/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: # $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): # $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(mkdir_p) "$(DESTDIR)$(libdir)"
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f=$(am__strip_dir) \
	    echo " $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) '$$p' '$(DESTDIR)$(libdir)/$$f'"; \
	    $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) "$$p" "$(DESTDIR)$(libdir)/$$f"; \
	  else :; fi; \
	done

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@set -x; list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  p=$(am__strip_dir) \
	  echo " $(LIBTOOL) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$p'"; \
	  $(LIBTOOL) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$p"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libCbc.la: $(libCbc_la_OBJECTS) $(libCbc_la_DEPENDENCIES) 
	$(CXXLINK) -rpath $(libdir) $(libCbc_la_LDFLAGS) $(libCbc_la_OBJECTS) $(libCbc_la_LIBADD) $(LIBS)
libCbcSolver.la: $(libCbcSolver_la_OBJECTS) $(libCbcSolver_la_DEPENDENCIES) 
	$(CXXLINK) -rpath $(libdir) $(libCbcSolver_la_LDFLAGS) $(libCbcSolver_la_OBJECTS) $(libCbcSolver_la_LIBADD) $(LIBS)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(mkdir_p) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
cbc$(EXEEXT): $(cbc_OBJECTS) $(cbc_DEPENDENCIES) 
	@rm -f cbc$(EXEEXT)
	$(CXXLINK) $(cbc_LDFLAGS) $(cbc_OBJECTS) $(cbc_LDADD) $(LIBS)
cbc-generic$(EXEEXT): $(cbc_generic_OBJECTS) $(cbc_generic_DEPENDENCIES) 
	@rm -f cbc-generic$(EXEEXT)
	$(CXXLINK) $(cbc_generic_LDFLAGS) $(cbc_generic_OBJECTS) $(cbc_generic_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/CbcBranchActual.Plo
include ./$(DEPDIR)/CbcBranchBase.Plo
include ./$(DEPDIR)/CbcBranchCut.Plo
include ./$(DEPDIR)/CbcBranchDynamic.Plo
include ./$(DEPDIR)/CbcBranchLotsize.Plo
include ./$(DEPDIR)/CbcCbcParam.Plo
include ./$(DEPDIR)/CbcCompareActual.Plo
include ./$(DEPDIR)/CbcCountRowCut.Plo
include ./$(DEPDIR)/CbcCutGenerator.Plo
include ./$(DEPDIR)/CbcEventHandler.Plo
include ./$(DEPDIR)/CbcFathom.Plo
include ./$(DEPDIR)/CbcFathomDynamicProgramming.Plo
include ./$(DEPDIR)/CbcGenBaB.Po
include ./$(DEPDIR)/CbcGenCbcParam.Po
include ./$(DEPDIR)/CbcGenCbcParamUtils.Po
include ./$(DEPDIR)/CbcGenCtlBlk.Po
include ./$(DEPDIR)/CbcGenMessages.Po
include ./$(DEPDIR)/CbcGenOsiParam.Po
include ./$(DEPDIR)/CbcGenOsiParamUtils.Po
include ./$(DEPDIR)/CbcGenParam.Po
include ./$(DEPDIR)/CbcGenParamUtils.Po
include ./$(DEPDIR)/CbcGenSolution.Po
include ./$(DEPDIR)/CbcGenSolvers.Po
include ./$(DEPDIR)/CbcGeneric.Po
include ./$(DEPDIR)/CbcHeuristic.Plo
include ./$(DEPDIR)/CbcHeuristicFPump.Plo
include ./$(DEPDIR)/CbcHeuristicGreedy.Plo
include ./$(DEPDIR)/CbcHeuristicLocal.Plo
include ./$(DEPDIR)/CbcHeuristicRINS.Plo
include ./$(DEPDIR)/CbcLinked.Plo
include ./$(DEPDIR)/CbcMessage.Plo
include ./$(DEPDIR)/CbcModel.Plo
include ./$(DEPDIR)/CbcNode.Plo
include ./$(DEPDIR)/CbcSolver.Plo
include ./$(DEPDIR)/CbcStatistics.Plo
include ./$(DEPDIR)/CbcStrategy.Plo
include ./$(DEPDIR)/CbcTree.Plo
include ./$(DEPDIR)/CbcTreeLocal.Plo
include ./$(DEPDIR)/Cbc_C_Interface.Plo
include ./$(DEPDIR)/Cbc_ampl.Plo
include ./$(DEPDIR)/ClpAmplStuff.Plo
include ./$(DEPDIR)/CoinSolve.Po
include ./$(DEPDIR)/unitTestClp.Plo

.cpp.o:
	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	if $(LTCXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:
install-includecoinHEADERS: $(includecoin_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(includecoindir)" || $(mkdir_p) "$(DESTDIR)$(includecoindir)"
	@list='$(includecoin_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(includecoinHEADERS_INSTALL) '$$d$$p' '$(DESTDIR)$(includecoindir)/$$f'"; \
	  $(includecoinHEADERS_INSTALL) "$$d$$p" "$(DESTDIR)$(includecoindir)/$$f"; \
	done

uninstall-includecoinHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(includecoin_HEADERS)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(includecoindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(includecoindir)/$$f"; \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	$(mkdir_p) $(distdir)/../inc
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS) $(HEADERS)
install-binPROGRAMS: install-libLTLIBRARIES

installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(includecoindir)"; do \
	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libLTLIBRARIES \
	clean-libtool mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am: install-includecoinHEADERS

install-exec-am: install-binPROGRAMS install-exec-local \
	install-libLTLIBRARIES

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-includecoinHEADERS \
	uninstall-info-am uninstall-libLTLIBRARIES uninstall-local

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-libLTLIBRARIES clean-libtool ctags \
	distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-exec install-exec-am \
	install-exec-local install-includecoinHEADERS install-info \
	install-info-am install-libLTLIBRARIES install-man \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags uninstall uninstall-am \
	uninstall-binPROGRAMS uninstall-includecoinHEADERS \
	uninstall-info-am uninstall-libLTLIBRARIES uninstall-local


install-exec-local:
	echo "#ifndef HAVE_CONFIG_H" >bla
	echo "#define HAVE_CONFIG_H" >>bla
	echo "#endif" >> bla
	cat $(srcdir)/$(ConfigHeader) >> bla
	$(install_sh_DATA) bla $(DESTDIR)$(includecoindir)/$(ConfigHeader)
	rm -f bla

uninstall-local:
	rm -f $(DESTDIR)$(includecoindir)/$(ConfigHeader)
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
